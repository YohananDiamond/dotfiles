#!/usr/bin/env sh

increment=$(( ${VOLUMECTL_INCREMENT:-5} + 1 ))

showHelp() {
  printf >&2 "Usage: %s\n" "$(basename $0) { inc | dec | mute }"
  exit 1
}

[ $# != 1 ] && showHelp

getActiveSink() {
  pacmd list-sinks | awk '/* index:/ {print $3}'
}

case "$1" in
  dec|decrease)
    activeSink=$(getActiveSink) || exit 1
    pactl set-sink-volume "$activeSink" -"$increment"%
    # amixer set Master "$increment"%-
    ;;
  inc|increase)
    activeSink=$(getActiveSink) || exit 1
    pactl set-sink-volume "$activeSink" +"$increment"%
    # amixer set Master "$increment"%+
    ;;
  mute|togglemute)
    activeSink=$(getActiveSink) || exit 1
    isMuted=$(pacmd list-sinks \
      | grep -A 15 "index: ${activeSink}" \
      | awk '/muted/ {print $2}')

    case "$isMuted" in
      yes)
        pactl set-sink-mute "$activeSink" 0
        ;;
      no)
        pactl set-sink-mute "$activeSink" 1
        ;;
      *)
        printf >&2 "Unknown mute status: %s\n" "$isMuted"
        ;;
    esac

    # amixer -D pulse set Master 1+ toggle
    ;;
  *)
    printf >&2 "Invalid option: %s\n" "$1"
    showHelp
    ;;
esac

# Useful source: https://customlinux.blogspot.com/2013/02/pavolumesh-control-active-sink-volume.html
