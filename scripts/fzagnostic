#!/usr/bin/env bash

# A wrapper for fzf and dmenu.
# Bashisms: arrays.

. "$(uselib std)"

while getopts "p:h:" o; do
  case "$o" in
    p) hasPrompt=1 prompt="$OPTARG" ;;
    h) hasHeight=1 height="$OPTARG" ;;
    *)
      printf >&2 "%s\n" "Usage: $(basename $0) [-p PROMPT] [-h HEIGHT]"
      exit 1
      ;;
  esac
done

if [ ! -t 2 ] && [ "$WAYLAND_DISPLAY" ] && exists bemenu; then
  args=(-i -n)
  [ "$hasPrompt" ] && args+=(-p "$prompt")
  [ "$hasHeight" ] && args+=(-l "$height") || args+=(-l 10)

  export BEMENU_OPTS=$(bemenu-load-colorscheme)

  bemenu "${args[@]}"
elif [ ! -t 2 ] && [ "$DISPLAY" ] && exists dmenu; then
  args=()
  [ "$hasPrompt" ] && args+=(-p "$prompt")
  [ "$hasHeight" ] && args+=(-l "$height")
  dmenu "${args[@]}"
elif [ -t 2 ] && exists fzf; then
  args=()
  [ "$hasPrompt" ] && args+=(--prompt "$prompt")
  [ "$hasHeight" ] && args+=(--height "$height")
  printf >&2 '\033[2 q' # change cursor to block
  fzf "${args[@]}" --no-border --no-sort --inline-info --exact
else
  printf >&2 "%s\n" "Could not open dmenu or fzf."
  exit 1
fi
