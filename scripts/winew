#!/usr/bin/env sh
#
# A relatively simple wine wrapper.

# Initial env vars
WINEW_ARCH=${WINEW_ARCH:-32}
XDG_DATA_DIR=${XDG_DATA_DIR:-$HOME/.local/share}
WINEW_32_PREFIX=${WINEW_32_PREFIX:-$XDG_DATA_DIR/wine32}
WINEW_64_PREFIX=${WINEW_64_PREFIX:-$XDG_DATA_DIR/wine64}
WINEW_RECENTF="${XDG_CACHE_HOME:-$HOME/.cache}/winew_recentf"
PROGNAME=$(basename $0)

usage() {
  printf >&2 "Usage: %s\n" "$PROGNAME { open <BIN> | cmd | add-recent <BIN> }"
  printf >&2 "Environment variables:\n"
  printf >&2 "  WINEW_ARCH := { 32 | 64 }\n"
  printf >&2 "                (Default: 32)\n"
  exit 1
}

has_line() {
  if [ $# != 1 ]; then
    printf >&2 "%s: invalid amount of arguments\n" "$(basename $0)"
    return 1
  fi

  while read line; do
    if [ "$line" = "$(realpath -m $1)" ]; then
      return 0
    fi
  done

  return 1
}

launch_application() {
  if [ -z "$NO_EXIST_CHECK" ] && [ ! -f "$1" ]; then
    printf >&2 "File not found: %s\n" "$1"
    return 1
  fi

  case "$WINEW_ARCH" in
    32)
      cd "$(dirname "$1")" \
        && WINEARCH=win32 WINEPREFIX="$WINEW_32_PREFIX" wine "$1"
      ;;
    64)
      cd "$(dirname "$1")" \
        && WINEARCH=win64 WINEPREFIX="$WINEW_64_PREFIX" wine "$1"
      ;;
    *)
      printf >&2 "Unknown arch: %s\n" "$WINEW_ARCH"
      usage
      ;;
  esac
}

case $# in
  1)
    case "$1" in
      cmd)
        NO_EXIST_CHECK=1 launch_application "cmd";
        ;;
      *) usage ;;
    esac
    ;;
  2)
    case "$1" in
      open) launch_application "$2" ;;
      add-recent)
        if [ -f "$2" ]; then
          register_recent "$2"
        else
          printf >&2 "File not found: %s\n" "$2"
          exit 1
        fi
        ;;
      *) usage ;;
    esac
    ;;
  *) usage ;;
esac
