#!/usr/bin/env ruby

# Battery checks to run in background.
# Due to not being a shell program to do such a simple task, it is
# slower. But... should I care? I'm not sure if I should in this
# situation. I might change my mind later, though.

BATTERY_PATH = "/sys/class/power_supply/BAT0/capacity"
CHARGE_STATE_PATH = "/sys/class/power_supply/BAT0/status"

CRIT_LEVEL = 5
LOW_LEVEL = 20
HIGH_LEVEL = 90
MAX_LEVEL = 100

def send_notify(message, level = "normal")
  system("notify-send '#{message}' -u #{level}")
end

state = :none
loop do
  bat_level = File::read(BATTERY_PATH).to_i
  is_charging = File::read(CHARGE_STATE_PATH) == "Charging\n"

  if (state != :crit) && (bat_level <= CRIT_LEVEL)
    if is_charging
      state = :none
    else
      state = :crit
      send_notify("Battery is very low! (#{format("%02d", bat_level)}%)", "critical")
    end

  elsif (state != :low) && (state != :crit) && (bat_level <= LOW_LEVEL)
    if is_charging
      state = :none
    else
      state = :low
      send_notify("Battery is low! (#{format("%02d", bat_level)}%)", "critical")
    end

  elsif (state != :high) && (HIGH_LEVEL <= bat_level)
    if is_charging
      state = :high
      send_notify("Battery is almost charged! (#{format("%02d", bat_level)}%)", "low")
    else
      state = :none
    end

  elsif (state != :max) && (state != :high) && (MAX_LEVEL <= bat_level)
    if is_charging
      state = :max
      send_notify("Battery is fully charged! (#{format("%02d", bat_level)}%)")
    else
      state = :none
    end
  end

  sleep(5)
end
