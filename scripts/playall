#!/usr/bin/env python3

import random
import os, sys
import subprocess as sp
import argparse as ap
from pathlib import Path

IGNORE_EXTENSIONS = {"png", "jpg", "jpeg", "txt"}
VALID_EXTENSIONS = {"mp3", "wav", "ogg", "flac", "opus", "m4a", "mp", "mp4"}


def main():
    parser = ap.ArgumentParser(
        prog=Path(sys.argv[0]).name,
        description="play a folder of songs",
    )

    parser.add_argument(
        "folder",
        help="the folder where the list of files should be obtained from - defaults to current directory",
        action="store",
        nargs='?',
        type=str,
    )

    parser.add_argument(
        "-s", "--shuffle",
        help="if the files list should be shuffled or not",
        action="store_true",
    )

    gp = parser.add_mutually_exclusive_group(required=False)

    gp.add_argument(
        "-r", "--recursive",
        help="make the listing recursive",
        action="store_true",
    )

    gp.add_argument(
        "-R", "--not-recursive",
        help="make the listing non-recursive",
        action="store_true",
    )

    parser.add_argument(
        "-v", "--version",
        action="version",
        version=f"{parser.prog} v. VOID",
    )

    opts = parser.parse_args(sys.argv[1:])
    folder = Path(opts.folder) if opts.folder else Path.cwd()

    if opts.recursive:
        recursive = True
    elif opts.not_recursive:
        recursive = False
    else:
        recursive = True

    print("Getting file list...", file=sys.stderr)
    files = get_files(folder, recursive=recursive)

    if opts.shuffle:
        print("Shuffling songs list...", file=sys.stderr)
        random.shuffle(files)
    else:
        print("Sorting songs list...", file=sys.stderr)
        files.sort()

    print("Ready to play!", file=sys.stderr)

    for file in files:
        name = file.name

        skip = False
        for extension in IGNORE_EXTENSIONS:
            if name.endswith(extension):
                skip = True

        if skip:
            continue

        for extension in VALID_EXTENSIONS:
            if name.endswith(extension):
                break
        else:
            print(f"File {file} has unknown extension", file=sys.stderr)
            continue

        print(f"Playing {file} ...", file=sys.stderr)

        with sp.Popen(
            ["mpv", "--no-video", str(file)],
            encoding="UTF-8",
        ) as proc:
            try:
                errored = proc.wait() != 0
            except KeyboardInterrupt:
                errored = True

            if errored:
                print(
                    f"mpv seems to have errored. Do you want to continue playing?",
                    file=sys.stderr,
                )

                print(
                    f"[Y/n] ",
                    end="",
                    file=sys.stderr,
                )

                i = input()

                if i.lower() != "y" and len(i) > 0:
                    break


def get_files(folder: Path, recursive=True):
    listing = []

    for f in folder.iterdir():
        if f.is_file():
            listing.append(f)
        elif f.is_dir():
            if recursive:
                listing.extend(get_files(f, recursive=True))

    return listing


if __name__ == "__main__":
    main()
