#!! getColor() { dotcfg send "get:theme_no_prefix.$1"; }
#!! for i in {0..15}; do b=$(printf "base%02X" "$i"); echo "$b: &$b $(getColor $b)ff"; done
#!! printf "font: &font %s\n" "$(dotcfg send 'get:yambar.font')"
#!!
bg_default: &bg_default {stack: [{background: {color: *base02}}, {underline: {size: 2, color: *base04}}]}
bar:
  height: 25
  location: bottom
  font: *font
  spacing: 2
  margin: 0
  layer: bottom
  foreground: *base04
  background: *base00

  left:
    - river:
        anchors:
          - base: &river_workspace
              left-margin: 9
              right-margin: 9
              default: {string: {text: "{id}"}}
              conditions: {}

        title:
          string: { text: " [{mode}] {title}" }
        content:
          map:
            conditions:
              state == urgent:
                map:
                  <<: *river_workspace
                  deco: {background: {color: *base08}}
              state == focused:
                map:
                  <<: *river_workspace
                  deco: *bg_default
              state == visible && ~occupied:
                map:
                  <<: *river_workspace
              state == visible && occupied:
                map:
                  <<: *river_workspace
                  deco: *bg_default
              state == unfocused:
                map:
                  <<: *river_workspace
              state == invisible && ~occupied: {empty: {}}
              state == invisible && occupied:
                map:
                  <<: *river_workspace
                  deco: {underline: {size: 1, color: *base03}}

  right:
    # - alsa:
    #     card: hw:PCH
    #     mixer: Master
    #     content:
    #       map:
    #         conditions:
    #           ~online: {string: {text: "vol !!! |", font: *font, foreground: *base04}}
    #           online:
    #             map:
    #               conditions:
    #                 muted: {string: {text: "vol OFF |", font: *font, foreground: *base03}}
    #                 ~muted: {string: {text: "vol {percent}% |", font: *font, foreground: *base04}}
    #
    - pipewire:
        content:
          map:
            conditions:
              type == "sink":
                - string: {text: "vol"}
                - map:
                    conditions:
                      muted: {string: {text: "OFF"}}
                      ~muted: {string: {text: "{cubic_volume}%"}}
                - string: {text: " "}
              type == "source":
                - string: {text: "ðŸŽ™"}
                - map:
                    conditions:
                      muted: {string: {text: "OFF"}}
                      ~muted: {string: {text: ""}}
                - string: {text: " "}

    - clock:
        date-format: "%Y-%m-%d"
        time-format: "%H:%M"
        content:
          - string: {text: "{date} {time} "}
