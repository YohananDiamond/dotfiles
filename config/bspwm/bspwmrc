#!/usr/bin/env sh
# vim: fdm=marker

# Init {{{

source ~/.local/share/env.sh # Reload environment variables

bspc monitor -d 1 2 3 4 5 6 7 8 9 0

# bspc config window_gap 7
bspc config top_padding 30
bspc config split_ratio 0.52
bspc config borderless_monocle true
bspc config gapless_monocle true

bspc config border_width 1
bspc config focused_border_color '#8EC07C'
bspc config active_border_color '#32302F'
bspc config normal_border_color '#32302F'

# bspc rule -a qutebrowser desktop='^2'
bspc rule -a Zathura state=tiled
bspc rule -a float state=floating
# bspc rule -a firefox desktop='^2'

killall sxhkd
start-sxhkd standard bspwm &
setbg &
start-polybar &

# }}}
# Event Handling {{{

# Based off: https://github.com/BrodieRobertson/cleanfullscreen

hideBar() { polybar-msg cmd hide; }
showBar() { polybar-msg cmd show; }

hideNodes() {
  nodes=$(bspc query -N -n .tiled -d "$1")

  for node in $nodes; do
    bspc node "$node" -g hidden=on
  done
}

showNodes() {
  nodes=$(bspc query -N -n .hidden -d "$1")

  for node in $nodes; do
    bspc node "$node" -g hidden=off
  done
}

bspc subscribe node_state | while read -r event
do
  monitor=$(echo "$event" | awk '{print $2}')
  desktop=$(echo "$event" | awk '{print $3}')
  state=$(echo "$event" | awk '{print $5}')
  active=$(echo "$event" | awk '{print $6}')

  # Hide bar and nodes when node becomes fullscreen, otherwise show
  if [ "$state" = "fullscreen" ]; then
    if [ "$active" = "on" ]; then
      if [ "$(bspc query -M -m primary)" = "$monitor" ]; then
        hideBar
      fi
      hideNodes "$desktop"
    else
      showNodes "$desktop"
      showBar
    fi
  fi
done &

bspc subscribe node_remove | while read -r event
do
  desktop=$(echo "$event" | awk '{print $3}')

  # Show bar if no nodes are fullscreen on current desktop
  if [ -z "$(bspc query -N -n .fullscreen -d "$desktop")" ]; then
    showBar
  fi
  showNodes "$desktop"
done &

bspc subscribe node_transfer | while read -r event
do
  srcNode=$(echo "$event" | awk '{print $4}')
  # Show nodes on src desktop and hide nodes on dest desktop
  # If src node is in full screen mode
  if [ -n "$(bspc query -N -n "$srcNode".fullscreen)" ]; then
    srcDesktop=$(echo "$event" | awk '{print $3}')
    showNodes "$srcDesktop"
    destDesktop=$(echo "$event" | awk '{print $6}')
    hideNodes "$destDesktop"
    showBar
  fi
done &

bspc subscribe desktop_focus | while read -r event
do
  desktop=$(echo "$event" | awk '{print $3}')

  # Hide bar if desktop contains fullscreen node, otherwise show it
  if [ -n "$(bspc query -N -n .fullscreen -d "$desktop" -m primary)" ]; then
    hideBar
  else
    showBar
  fi
done &

# }}}
