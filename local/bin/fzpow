#!/usr/bin/env sh
# vim: foldmethod=marker

# A simple script for power actions.
# If no args are specified, dmenu / fzf is loaded.
# If an arg is provided, this script tries to choose said option.

# Settings
OPTIONS='lock\nlogout\nsuspend\nhibernate\nreboot\nshutdown'

source ~/.local/lib/ystd.sh
depCheck dmenu systemctl betterlockscreen

fuzzyMatch() { printf "$OPTIONS" | dmenu -p "Power: "; }
matchArgs() { # {{{
  case $# in
    0) local choice="$(fuzzyMatch)"
      if [ -n "$choice" ]; then
        matchArgs "$choice"
      else
        showHelp
      fi ;;

    1) case "$1" in
        lock|logout|suspend|hibernate|reboot|shutdown) \
          eval "action_$1" ;;
        *) showHelp ;;
      esac ;;

    *) showHelp ;;
  esac
} # }}}
showHelp() { # {{{
  printf >&2 "%s %s\n" "Usage: $(basename $0)" \
    "[{lock | logout | suspend | hibernate | reboot | shutdown}]"
  printf >&2 "%s\n" "If no argument is specified, a dmenu pop-up is shown."
  exit 1
} # }}}

# Actions
action_lock() { # {{{
  betterlockscreen -l
} # }}}
action_logout() { # {{{
  case "$WM" in
    i3) i3-msg exit ;;
    bspwm) bspc quit ;;
    *) printf 'Unknown wm "%s" - logging out will not work\n' "$wm" ;;
  esac
} # }}}
action_suspend() { # {{{
  action_lock &
  sleep 1 # Small delay
  systemctl suspend
} # }}}
action_hibernate() { # {{{
  printf >&2 "The hibernate action is currently unimplemented\n"
  exit 1
} # }}}
action_reboot() { # {{{
  systemctl reboot
} # }}}
action_shutdown() { # {{{
  systemctl poweroff
} # }}}

matchArgs "$@"
